pipeline {
    agent any
    
    tools {
        maven 'localMaven'
        jdk 'Java8'
    }
    
    environment {
        NEXUS_VERSION = 'nexus3'
        NEXUS_URL = 'localhost:8081/service/rest/repository/browse'
        NEXUS_REPOSITORY = 'AssafaBanking'
        NEXUS_CREDENTIAL_ID = 'nexusCredential'
        MYSQL_ROOT_PASSWORD = 'r00t'
        MYSQL_DATABASE = 'bankdb'
        MYSQL_USER = 'root'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                script {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }
        
        stage('Publish to Nexus') {
            steps {
                script {
                    def pom = readMavenPom file: 'pom.xml'
                    def filesByGlob = findFiles(glob: "target/*.${pom.packaging}")
                    def artifactPath = filesByGlob[0].path
                    
                    if (fileExists(artifactPath)) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}"
                        
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: 'http',
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                 classifier: '',
                                 file: artifactPath,
                                 type: pom.packaging]
                            ]
                        )
                        echo "Artifact upload successful"
                    } else {
                        error "*** File: ${artifactPath}, could not be found"
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed.'
            deleteDir() // Clean up workspace
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
